# The domain name for the homepage service:
HOMEPAGE_TRAEFIK_HOST=homepage.example.com

# There is a separate domain for the reloader webhook
# (required so the webhook doesnt need mTLS):
HOMEPAGE_WEBHOOK_HOST=homepage-webhook.example.com

# The tag for the Docker image
HOMEPAGE_VERSION=v0.9.13

# The name of this instance. If there is only one instance, use 'default'.
HOMEPAGE_INSTANCE=

# Filter access by IP address source range (CIDR):
##Disallow all access: 0.0.0.0/32
##Allow all access: 0.0.0.0/0
HOMEPAGE_IP_SOURCERANGE=0.0.0.0/0

# HTTP Basic Authentication:
# Use `make config` to fill this in properly, or set this to blank to disable.
HOMEPAGE_HTTP_AUTH=

# OAUTH2
# Set to `true` to use OpenID/OAuth2 authentication via the
# traefik-forward-auth service in d.rymcg.tech.
# Using OpenID/OAuth2 will require login to access your app,
# but it will not affect what a successfully logged-in person can do in your
# app. If your app has built-in authentication and can check the user
# header that traefik-forward-auth sends, then your app can limit what the
# logged-in person can do in the app. But if your app can't check the user
# header, or if your app doesn't have built-in authentication at all, then
# any person with an account on your Gitea server can log into your app and
# have full access.
HOMEPAGE_OAUTH2=
# In addition to Oauth2 authentication, you can configure basic authorization
# by entering which authorization group can log into your app. You create
# groups of email addresses in the `traefik` folder by running `make groups`. 
HOMEPAGE_OAUTH2_AUTHORIZED_GROUP=

# Mutual TLS (mTLS):
# Set true or false. If true, all clients must present a certificate signed by Step-CA:
HOMEPAGE_MTLS_AUTH=false
# Enter a comma separated list of client domains allowed to connect via mTLS.
# Wildcards are allowed and encouraged on a per-app basis:
HOMEPAGE_MTLS_AUTHORIZED_CERTS=*.clients.homepage.example.com

## To support automatic Docker service discovery, you need to mount the docker socket.
## Since this is a security concern, it should be disabled by default, unless you want it.
HOMEPAGE_ENABLE_DOCKER=false

## The Homepage reloader is an HTTP endpoint that can trigger a
## restart of the container when an authenticated webhook makes a
## request to do so.
HOMEPAGE_RELOADER_PATH_PREFIX=/reloader

## This is the secret value used by the reloader as an access credential:
## You must retrieve/share this secret with your external webhook
## client (eg. in GitHub repository settings):
HOMEPAGE_RELOADER_HMAC_SECRET=

## When HOMEPAGE_AUTO_CONFIG=true, Homepage will be automatically configured
## for all your d.rymcg.tech apps running on the current Docker context. To
## update the Homepage configuration whenever your running d.rymcg.tech apps
## change, you will need to run `make config` and `make install` in the
## `homepage` directory.
## When HOMEPAGE_AUTO_CONFIG=false, Homepage will be configured via the
## custom configuration repo you configure in HOMEPAGE_TEMPLATE_REPO.
HOMEPAGE_AUTO_CONFIG=true

## Template git repository used to make the initial config:
## All environment variables will be substituted in the templates via envsubst
## Cloning from private git repositores is supported, but you must create a deploy key first.
## eg. HOMEPAGE_TEMPLATE_REPO=git@github.com:YourUsername/my-private-homepage-template.git
HOMEPAGE_TEMPLATE_REPO=https://github.com/EnigmaCurry/d.rymcg.tech_homepage-template.git

## If you want to reset your config on every startup from the HOMEPAGE_TEMPLATE_REPO,
## set HOMEPAGE_TEMPLATE_REPO_SYNC_ON_START=true
## Warning: ALL of your existing homepage config would be deleted every time the container restarts:
HOMEPAGE_TEMPLATE_REPO_SYNC_ON_START=false

## If HOMEPAGE_PUBLIC_HTTPS_PORT is blank, Homepage will use the public https port
## configured in the root .env file for this Docker context.
HOMEPAGE_PUBLIC_HTTPS_PORT=
