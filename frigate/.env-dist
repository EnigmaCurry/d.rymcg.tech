# The docker image to use (https://github.com/blakeblackshear/frigate/tags):
# Note: Frigate tags include a "v" (e.g., "v0.15.0") but their images actually
# don't, so do not include the "v" (e.g., "0.15.0")
FRIGATE_IMAGE=ghcr.io/blakeblackshear/frigate:0.15.0

# The domain name for the frigate service:
FRIGATE_TRAEFIK_HOST=frigate.example.com

# The name of this instance. If there is only one instance, use 'default'.
FRIGATE_INSTANCE=

# Filter access by IP address source range (CIDR):
##Disallow all access: 0.0.0.0/32
##Allow all access: 0.0.0.0/0
FRIGATE_IP_SOURCERANGE=0.0.0.0/0

# HTTP Basic Authentication:
# Use `make config` to fill this in properly, or set this to blank to disable.
FRIGATE_HTTP_AUTH=

# OAUTH2
# Set to `true` to use OpenID/OAuth2 authentication via the
# traefik-forward-auth service in d.rymcg.tech.
# Using OpenID/OAuth2 will require login to access your app,
# but it will not affect what a successfully logged-in person can do in your
# app. If your app has built-in authentication and can check the user
# header that traefik-forward-auth sends, then your app can limit what the
# logged-in person can do in the app. But if your app can't check the user
# header, or if your app doesn't have built-in authentication at all, then
# any person with an account on your Gitea server can log into your app and
# have full access.
FRIGATE_OAUTH2=
# In addition to Oauth2 authentication, you can configure basic authorization
# by entering which authorization group can log into your app. You create
# groups of email addresses in the `traefik` folder by running `make groups`. 
FRIGATE_OAUTH2_AUTHORIZED_GROUP=

# Mutual TLS (mTLS):
# Set true or false. If true, all clients must present a certificate signed by
# Step-CA:
FRIGATE_MTLS_AUTH=false
# Enter a comma separated list of client domains allowed to connect via mTLS.
# Wildcards are allowed and encouraged on a per-app basis:
FRIGATE_MTLS_AUTHORIZED_CERTS=*.clients.frigate.example.com

FRIGATE_RTSP_PASSWORD=

# See here for an explanation and formula for calculating appropriate shared
# memory size: https://docs.frigate.video/frigate/installation/#calculating-required-shm-size
FRIGATE_SHM_SIZE=128mb

# To pass the video hardware to the Frigate container, enter the path to the
# hardware's `/dev/` on the host.
# E.g.: Pass the USB Coral (needs to be modified for other versions)
# FRIGATE_VIDEO_HARDWARE_DEVICE=/dev/bus/usb
# E.g.: Pass a PCIe Coral (follow driver instructions here: https://coral.ai/docs/m2/get-started/#2a-on-linux)
# FRIGATE_VIDEO_HARDWARE_DEVICE=/dev/apex_0
# E.g.: For Raspberry Pi 4B
# FRIGATE_VIDEO_HARDWARE_DEVICE=/dev/video11
# E.g.: For Intel hwaccel (needs to be updated for your hardware)
# FRIGATE_VIDEO_HARDWARE_DEVICE=/dev/dri/renderD129
FRIGATE_VIDEO_HARDWARE_DEVICE=/dev/dri/renderD129

# Set to a comma-separated list of trusted reverse proxy IPs. CIDR notation is
# permitted, e.g.,: 10.13.16.0/24
FRIGATE_TRUSTED_PROXIES=10.13.16.1/32
