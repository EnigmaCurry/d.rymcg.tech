services:
  immich:
    image: ${IMMICH_IMAGE:-ghcr.io/immich-app/immich-server:release}
    volumes:
      - uploads:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - IMMICH_TRUSTED_PROXIES=${IMMICH_TRUSTED_PROXIES}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USER}
      - DB_DATABASE_NAME=${IMMICH_DB}
    depends_on:
      - redis
      - database
    restart: unless-stopped
    healthcheck:
      disable: false
    labels: []
    security_opt:
      - no-new-privileges:true
      - apparmor=unconfined
    cap_drop:
      - NET_RAW
  
  machine-learning:
    volumes:
      - model-cache:/cache
    restart: unless-stopped
    healthcheck:
      disable: false
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - NET_RAW

  redis:
    image: docker.io/redis:6.2-alpine@sha256:2d1463258f2764328496376f5d965f20c6a67f66ea2b06dc42af351f75248792
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped
    command: redis-server --loglevel warning
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - NET_RAW

  database:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      - POSTGRES_PASSWORD=${IMMICH_DB_PASSWORD}
      - POSTGRES_USER=${IMMICH_DB_USER}
      - POSTGRES_DB=${IMMICH_DB}
      - POSTGRES_INITDB_ARGS='--data-checksums'
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${IMMICH_DB}' --username='${IMMICH_DB_USER}' || exit 1; Chksum="$$(psql --dbname='${IMMICH_DB}' --username='${IMMICH_DB_USER}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c", "shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: unless-stopped
