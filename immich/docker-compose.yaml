services:
  immich:
    image: ${IMMICH_IMAGE:-ghcr.io/immich-app/immich-server:release}
    volumes:
      - uploads:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - IMMICH_TRUSTED_PROXIES=${IMMICH_TRUSTED_PROXIES}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USER}
      - DB_DATABASE_NAME=${IMMICH_DB}
    depends_on:
      - redis
      - database
    restart: unless-stopped
    healthcheck:
      disable: false
    labels: []
    security_opt:
      - no-new-privileges:true
      - apparmor=unconfined
    cap_drop:
      - NET_RAW
  
  machine-learning:
    volumes:
      - model-cache:/cache
    restart: unless-stopped
    healthcheck:
      disable: false
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - NET_RAW
    labels:
      - "backup-volume.stop-during-backup=true"

  redis:
    image: docker.io/redis:6.2-alpine@sha256:2d1463258f2764328496376f5d965f20c6a67f66ea2b06dc42af351f75248792
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped
    command: redis-server --loglevel warning
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - NET_RAW
    labels:
      - "backup-volume.stop-during-backup=true"

  database:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0
    environment:
      - POSTGRES_PASSWORD=${IMMICH_DB_PASSWORD}
      - POSTGRES_USER=${IMMICH_DB_USER}
      - POSTGRES_DB=${IMMICH_DB}
      - POSTGRES_INITDB_ARGS=--data-checksums
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    labels:
      - "backup-volume.stop-during-backup=true"
