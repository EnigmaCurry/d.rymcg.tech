### .env-dist should contain the default settings for all new apps, and edited rarely.
### .env_${DOCKER_CONTEXT}_${INSTANCE} should contain your specific instance config.
### Use `make config` to create/update the instance config from .env-dist

## All environment variable names should use a common prefix:
## eg. 'GRADIO_' (rename this prefix to be specific for your app.)
## This prefix is to be stripped, when mapped in docker-compose.yaml:
## eg. GRADIO_API_UPLOAD_FOLDER
##       becomes just API_UPLOAD_FOLDER inside your containers.

# The domain name for this instance of the app:
GRADIO_TRAEFIK_HOST=gradio.example.com

# The entrypoint to use:
GRADIO_TRAEFIK_ENTRYPOINT=websecure

## Create a unique name for this instance of the app:
##`make config` will set this to `default` if you do not specify it.
GRADIO_INSTANCE=

## What app to install on this instance?
## See ./gradio sub-directory for all available apps.
GRADIO_APP=chatbot

## Chatbot app requires a remote lm-studio API URL:
GRADIO_CHATBOT_API=

## Chatbot models list:
GRADIO_CHATBOT_MODELS=

# Filter access by IP address source range (CIDR):
# See: https://doc.traefik.io/traefik/middlewares/http/ipwhitelist/
## Disallow all access:
#GRADIO_IP_SOURCERANGE="0.0.0.0/32"
## Allow all access:
#GRADIO_IP_SOURCERANGE="0.0.0.0/0"
GRADIO_IP_SOURCERANGE="0.0.0.0/0"

# HTTP Basic Authentication
# Use `make config` to generate and configure this setting interactively.
# Set multiple htpasswd encoded username/passwords comma separated; blank to disable
# See: https://doc.traefik.io/traefik/middlewares/http/basicauth/
GRADIO_HTTP_AUTH=

# OAUTH2
# Set to `true` to use OpenID/OAuth2 authentication via the
# traefik-forward-auth service in d.rymcg.tech.
# Using OpenID/OAuth2 will require login to access your app,
# but it will not affect what a successfully logged-in person can do in your
# app. If your app has built-in authentication and can check the user
# header that traefik-forward-auth sends, then your app can limit what the
# logged-in person can do in the app. But if your app can't check the user
# header, or if your app doesn't have built-in authentication at all, then
# any person with an account on your Gitea server can log into your app and
# have full access.
GRADIO_OAUTH2=
# In addition to Oauth2 authentication, you can configure basic authorization
# by entering which authorization group can log into your app. You create
# groups of email addresses in the `traefik` folder by running `make groups`. 
GRADIO_OAUTH2_AUTHORIZED_GROUP=

# Mutual TLS (mTLS):
# Set true or false. If true, all clients must present a certificate signed by Step-CA:
GRADIO_MTLS_AUTH=false
# Enter a comma separated list of client domains allowed to connect via mTLS.
# Wildcards are allowed and encouraged on a per-app basis:
GRADIO_MTLS_AUTHORIZED_CERTS=*.clients.gradio.example.com

# Python log level:
# use debug, info, warning, error, or critical
GRADIO_LOG_LEVEL=info

GRADIO_CHATBOT_API=
