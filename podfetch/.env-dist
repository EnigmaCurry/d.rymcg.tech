# The domain name for the podfetch service:
PODFETCH_TRAEFIK_HOST=podfetch.example.com

# the version of the docker image to use
PODFETCH_VERSION=v4.4.0-postgres-b2febd8

# The name of this instance. If there is only one instance, use 'default'.
PODFETCH_INSTANCE=

PODFETCH_POSTGRES_PW=

# Filter access by IP address source range (CIDR):
##Disallow all access: 0.0.0.0/32
##Allow all access: 0.0.0.0/0
PODFETCH_IP_SOURCERANGE=0.0.0.0/0

# HTTP Basic Authentication:
# Use `make config` to fill this in properly, or set this to blank to disable.
PODFETCH_HTTP_AUTH=

# OAUTH2
# Set to `true` to use OpenID/OAuth2 authentication via the
# traefik-forward-auth service in d.rymcg.tech.
# Using OpenID/OAuth2 will require login to access your app,
# but it will not affect what a successfully logged-in person can do in your
# app. If your app has built-in authentication and can check the user
# header that traefik-forward-auth sends, then your app can limit what the
# logged-in person can do in the app. But if your app can't check the user
# header, or if your app doesn't have built-in authentication at all, then
# any person with an account on your Gitea server can log into your app and
# have full access.
PODFETCH_OAUTH2=
# In addition to Oauth2 authentication, you can configure basic authorization
# by entering which authorization group can log into your app. You create
# groups of email addresses in the `traefik` folder by running `make groups`. 
PODFETCH_OAUTH2_AUTHORIZED_GROUP=


## You can run the podfetch service as any user/group:
PODFETCH_UID=54321
PODFETCH_GID=54321

# Configure Podfetch via these environment variables
PODFETCH_BASIC_AUTH=true
PODFETCH_USERNAME=username
PODFETCH_PASSWORD=password

PODFETCH_GPODDER_INTEGRATION_ENABLED=true