version: "3.3"

networks:
  traefik-wireguard:
    name: traefik-wireguard
  traefik-mail:
    name: traefik-mail

volumes:
  traefik:

services:
  config:
    build:
      context: config
    security_opt:
      - no-new-privileges:true
    environment:
      - TRAEFIK_ACME_CA_EMAIL
      - TRAEFIK_DASHBOARD_AUTH
      - TRAEFIK_IMAGE
      - TRAEFIK_LOG_LEVEL
      - TRAEFIK_CERT_ROOT_DOMAIN
      - TRAEFIK_CERT_SANS_DOMAIN
      - TRAEFIK_ACME_DNS_CHALLENGE
      - TRAEFIK_ACME_TLS_CHALLENGE
    volumes:
      - traefik:/data

  traefik:
    depends_on: ['config']
    build:
      context: .
      args:
        TRAEFIK_IMAGE: ${TRAEFIK_IMAGE}
        BLOCKPATH_MODULE: github.com/traefik/plugin-blockpath
        BLOCKPATH_GIT_BRANCH: master
    container_name: "traefik"
    restart: unless-stopped
    network_mode: host
    security_opt:
      - no-new-privileges:true
    environment:
      - ${TRAEFIK_ACME_DNS_VARNAME_1:-TRAEFIK_ACME_DNS_NA_1}
      - ${TRAEFIK_ACME_DNS_VARNAME_2:-TRAEFIK_ACME_DNS_NA_2}
      - ${TRAEFIK_ACME_DNS_VARNAME_3:-TRAEFIK_ACME_DNS_NA_3}
      - ${TRAEFIK_ACME_DNS_VARNAME_4:-TRAEFIK_ACME_DNS_NA_4}
      - ${TRAEFIK_ACME_DNS_VARNAME_5:-TRAEFIK_ACME_DNS_NA_5}
    command:
      - "--log.level=${TRAEFIK_LOG_LEVEL}"
      ## Send usage feedback to Traefik Labs (default false):
      - "--global.sendAnonymousUsage=${TRAEFIK_SEND_ANONYMOUS_USAGE:-false}"
      ## File provider:
      - "--providers.file.directory=/data/config"
      - "--providers.file.watch=true"
      ## Docker provider:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      ## Entrypoints:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      #- "--entrypoints.vpn.address=${TRAEFIK_WIREGUARD_SUBNET_IP}:442"
      - "--entrypoints.mqtt.address=:8883"
      - "--entrypoints.ssh.address=:2222"
      - "--entrypoints.traefik.address=127.0.0.1:8080"
      #- "--entrypoints.smtp.address=${TRAEFIK_WIREGUARD_SUBNET_IP}:465"
      #- "--entrypoints.imap.address=${TRAEFIK_WIREGUARD_SUBNET_IP}:993"
      #- "--entrypoints.dns.address=:53"
      ## Automatically redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      ## ACME TLS certificate resolver (Let's Encrypt):
      - "--entrypoints.websecure.http.tls.certResolver=production"
      - "--entrypoints.websecure.http.tls.domains[0].main=${TRAEFIK_CERT_ROOT_DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=${TRAEFIK_CERT_SANS_DOMAIN}"
      - "--certificatesresolvers.production.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.staging.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.production.acme.email=${TRAEFIK_ACME_CA_EMAIL}"
      - "--certificatesresolvers.staging.acme.email=${TRAEFIK_ACME_CA_EMAIL}"
      - "--certificatesresolvers.production.acme.storage=/data/acme-production.json"
      - "--certificatesresolvers.staging.acme.storage=/data/acme-staging.json"
      ## ACME TLS challenge:
      - "--certificatesresolvers.production.acme.tlschallenge=${TRAEFIK_ACME_TLS_CHALLENGE:-false}"
      - "--certificatesresolvers.staging.acme.tlschallenge=${TRAEFIK_ACME_TLS_CHALLENGE:-false}"
      ## ACME DNS challenge:
      - "--certificatesresolvers.production.acme.dnschallenge=${TRAEFIK_ACME_DNS_CHALLENGE:-false}"
      - "--certificatesresolvers.staging.acme.dnschallenge=${TRAEFIK_ACME_DNS_CHALLENGE:-false}"
      - "--certificatesresolvers.production.acme.dnschallenge.provider=${TRAEFIK_ACME_DNS_PROVIDER}"
      - "--certificatesresolvers.staging.acme.dnschallenge.provider=${TRAEFIK_ACME_DNS_PROVIDER}"
      ## Enable Dashboard available only from the docker localhost:8080 (password required)
      - "--api.dashboard=true"
      ## Load local plugins that have been bundled into the traefik image:
      - "--experimental.localPlugins.blockpath.modulename=github.com/traefik/plugin-blockpath"
      ## Access logs:
      - "--accesslog=${TRAEFIK_ACCESS_LOGS_ENABLED:-false}"
      - "--accesslog.filepath=${TRAEFIK_ACCESS_LOGS_PATH:-/data/access.log}"
      ## ip whitelist vpn endpoint access from traefik-wireguard network only (HTTP):
      - "--entrypoints.vpn.http.middlewares=vpn-ipwhitelist@docker"
      ## ip whitelist vpn endpoint access from traefik-wireguard network only (TCP):
      ### Why can't I specify a tcp middleware on the entrypoint??
      ##- "--entrypoints.vpn.tcp.middlewares=vpn-ipwhitelist@docker"
    volumes:
      - "traefik:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      ## Require HTTP Basic Auth for api and dashboard which runs only on the
      ## traefik endpoint (unexposed port 8080):
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
      - "traefik.http.routers.api.entrypoints=traefik"
      - "traefik.http.routers.api.service=api@internal"
      # must specify a dummy-svc to see dashboard with host networking
      # ref: https://github.com/traefik/traefik/issues/5732#issuecomment-894362338
      - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"

      - "traefik.http.routers.api.middlewares=traefik-dashboard-auth"
      - "traefik.http.middlewares.traefik-dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_AUTH}"
      #- "traefik.http.middlewares.traefik-api-ipwhitelist.ipwhitelist.sourcerange=${TRAEFIK_WIREGUARD_SUBNET}"
      #- "traefik.tcp.middlewares.traefik-api-ipwhitelist.ipwhitelist.sourcerange=${TRAEFIK_WIREGUARD_SUBNET}"

      ## VPN sourcerange filter:
      # - "traefik.http.middlewares.vpn-ipwhitelist.ipwhitelist.sourcerange=${TRAEFIK_WIREGUARD_SUBNET}"
      # - "traefik.tcp.middlewares.vpn-ipwhitelist.ipwhitelist.sourcerange=${TRAEFIK_WIREGUARD_SUBNET}"
