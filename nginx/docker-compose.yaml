
volumes:
  files:
  redis:

services:
  nginx:
    profiles:
      - nginx
    build:
      context: nginx
      args:
        VERSION: ${NGINX_VERSION}
        TEMPLATE: ${NGINX_TEMPLATE}
        HOST: ${NGINX_TRAEFIK_HOST}
        OWNER_UID: ${NGINX_OWNER_UID}
        OWNER_GID: ${NGINX_OWNER_GID}
    restart: unless-stopped
    volumes:
      - "files:/app"

  php-fpm:
    profiles:
      - php-fpm
    build:
      context: php-fpm
      args:
        VERSION: ${NGINX_PHP_VERSION}
        DEBUG_MODE: ${NGINX_DEBUG_MODE}
        PHP_INDEX_FILE: ${NGINX_PHP_INDEX_FILE:-default.php}
    environment:
      UID: ${NGINX_OWNER_UID}
      GID: ${NGINX_OWNER_GID}
      PGHOST: postgres
      PGUSER: postgres
      PGDATABASE: ${NGINX_POSTGRES_DB}
      PGPASSWORD: ${NGINX_POSTGRES_PASSWORD}
      PGPORT: 5432
    restart: unless-stopped
    working_dir: /app
    volumes:
      - "files:/app"
    labels:
      - "backup-volume.stop-during-backup=true"

  redis:
    profiles:
      # Always enable redis when PHP is enabled:
      - php-fpm
    image: "redis:${NGINX_REDIS_VERSION}"
    command: redis-server --save 60 1 --loglevel warning
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - "redis:/data"
    labels:
      - "backup-volume.stop-during-backup=true"

      
  postgres:
    profiles:
      - postgres
    image: postgres:${NGINX_POSTGRES_VERSION}
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${NGINX_POSTGRES_PASSWORD}
      POSTGRES_DB: ${NGINX_POSTGRES_DB}
    labels:
      - "backup-volume.stop-during-backup=true"
      
