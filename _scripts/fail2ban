#!/bin/bash
set -e

source $(dirname $(realpath ${BASH_SOURCE}))/funcs.sh
ROOT_ENV=${ROOT_DIR}/$(basename ${ROOT_ENV})

if [[ ! -f "${ROOT_ENV}" ]]; then
    fault "Could not find root context env file: ${ROOT_ENV}"
fi

ENABLED=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_ENABLED)
SSHD_ENABLED=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_SSHD_ENABLED)
SSHD_MAX_RETRY=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_SSHD_MAX_RETRY)
SSHD_BAN_TIME=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_SSHD_BAN_TIME)
SSHD_FIND_TIME=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_SSHD_FIND_TIME)
SSHD_ALLOW_IPV6=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_SSHD_ALLOW_IPV6)
TRAEFIK_ACCESS_LOG=/var/lib/docker/volumes/traefik_traefik/_data/access.log
TRAEFIK_ACCESS_ENABLED=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_TRAEFIK_ACCESS_ENABLED)
TRAEFIK_ACCESS_MAX_RETRY=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_TRAEFIK_ACCESS_MAX_RETRY)
TRAEFIK_ACCESS_BAN_TIME=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_TRAEFIK_ACCESS_BAN_TIME)
TRAEFIK_ACCESS_FIND_TIME=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_TRAEFIK_ACCESS_FIND_TIME)
TRAEFIK_ACCESS_ALLOW_IPV6=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_TRAEFIK_ACCESS_ALLOW_IPV6)
TRAEFIK_ACCESS_ERROR_LIST=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_TRAEFIK_ACCESS_ERROR_LIST)
TRAEFIK_ACCESS_ERROR_LIST="${TRAEFIK_ACCESS_ERROR_LIST//,/|}"
TRAEFIK_VPN_SUBNET=$(${BIN}/dotenv -f ${ROOT_DIR}/traefik/${ENV_FILE} get TRAEFIK_VPN_SUBNET)
IGNORE_IP=$(${BIN}/dotenv -f ${ROOT_ENV} get FAIL2BAN_IGNORE_IP)
IGNORE_IP="${IGNORE_IP//,/ }"

host_is_debian() {
    d.rymcg.tech ssh '[[ -f /etc/debian_version ]]' &> /dev/null
}

host_is_fedora() {
    d.rymcg.tech ssh 'if [[ -f /etc/redhat-release ]]; then
                  if command -v dnf &> /dev/null; then
                      :
                  elif command -v yum &> /dev/null; then
                      :
                  else
                      fault "This system is Fedora-based, but neither '\''dnf'\'' nor '\''yum'\'' is available."
                  fi
                  exit 0
              else
                  exit 1
              fi'
}

host_is_arch_linux() {
    d.rymcg.tech ssh '[[ -f /etc/arch-release ]]' &> /dev/null
}

install_fail2ban() {
    if host_is_debian; then
        echo "Installing Fail2ban on Debian-based system..."
        d.rymcg.tech ssh "sudo apt-get update && sudo apt-get install -y fail2ban"

    elif host_is_fedora; then
        echo "Installing Fail2ban on Fedora-based system..."
        d.rymcg.tech ssh "sudo dnf install -y fail2ban || sudo yum install -y fail2ban"

    elif host_is_arch_linux; then
        echo "Installing Fail2ban on Arch Linux-based system..."
        d.rymcg.tech ssh "sudo pacman -Syu --noconfirm fail2ban"

    else
        echo "Error: This system OS could not be detected. Debian, Fedora, and Arch Linux are supported. You must install the Fail2ban package yourself."
        exit 1
    fi
}

enable_or_disable_fail2ban() {
    if [[ "${ENABLED}" == "true" ]]; then
        d.rymcg.tech ssh systemctl enable --now fail2ban
        d.rymcg.tech ssh systemctl restart fail2ban
        sleep 3
        d.rymcg.tech ssh systemctl status fail2ban
        d.rymcg.tech ssh fail2ban-client status
        echo
        d.rymcg.tech ssh cat /etc/fail2ban/fail2ban.local
        echo
        d.rymcg.tech ssh cat /etc/fail2ban/jail.d/sshd.local
        echo
        d.rymcg.tech ssh cat /etc/fail2ban/jail.d/traefik.local
        echo
        d.rymcg.tech ssh cat /etc/fail2ban/filter.d/traefik-access.conf
        echo
        echo "Fail2Ban has been ENABLED according to config: FAIL2BAN_ENABLED=${ENABLED}."
    else
        d.rymcg.tech ssh systemctl disable --now fail2ban
        sleep 3
        d.rymcg.tech ssh systemctl status fail2ban || true
        echo "Fail2Ban has been DISABLED according to config: FAIL2BAN_ENABLED=${ENABLED}."
    fi
}

configure_fail2ban() {
    d.rymcg.tech ssh 'cat > /etc/fail2ban/fail2ban.local' <<EOF
[DEFAULT]
loglevel = DEBUG
bantime = 10m
findtime = 10m
maxretry = 5
allowipv6 = true
ignoreip = ${IGNORE_IP}
EOF

    if [[ "${SSHD_ENABLED}" == "true" ]]; then
        d.rymcg.tech ssh 'cat > /etc/fail2ban/jail.d/sshd.local' <<EOF
[sshd]
enabled = true
port = ssh
filter = sshd
backend = systemd
maxretry = ${SSHD_MAX_RETRY}
bantime = ${SSHD_BAN_TIME}
findtime = ${SSHD_FIND_TIME}
allowipv6 = ${SSHD_ALLOW_IPV6}
ignoreip = ${IGNORE_IP}
EOF
    fi
    
    if [[ "${TRAEFIK_ACCESS_ENABLED}" == "true" ]]; then
        d.rymcg.tech ssh 'cat > /etc/fail2ban/jail.d/traefik.local' <<EOF    
[traefik-access]
enabled = true
filter = traefik-access
logpath = ${TRAEFIK_ACCESS_LOG}
maxretry = ${TRAEFIK_ACCESS_MAX_RETRY}
bantime = ${TRAEFIK_ACCESS_BAN_TIME}
findtime = ${TRAEFIK_ACCESS_FIND_TIME}
allowipv6 = ${TRAEFIK_ACCESS_ALLOW_IPV6}
ignoreip = ${IGNORE_IP}
EOF

        d.rymcg.tech ssh 'cat > /etc/fail2ban/filter.d/traefik-access.conf' <<EOF
[Definition]
failregex = .*"ClientHost":"<HOST>".*"DownstreamStatus":(?:${TRAEFIK_ACCESS_ERROR_LIST}).*$
ignoreregex =
EOF
    fi
}

main() {
    check_var ENV_FILE ROOT_ENV DOCKER_CONTEXT ROOT_DIR CONTEXT_INSTANCE \
              SSHD_ENABLED SSHD_MAX_RETRY SSHD_BAN_TIME SSHD_FIND_TIME \
              SSHD_ALLOW_IPV6 TRAEFIK_ACCESS_LOG TRAEFIK_ACCESS_ENABLED \
              TRAEFIK_ACCESS_MAX_RETRY TRAEFIK_ACCESS_BAN_TIME \
              TRAEFIK_ACCESS_FIND_TIME TRAEFIK_ACCESS_ALLOW_IPV6 \
              TRAEFIK_VPN_SUBNET
    IGNORE_IP="127.0.0.1/8 ${TRAEFIK_VPN_SUBNET}/24 ${IGNORE_IP}"
    echo
    if [[ "$ENABLED" == "true" ]]; then
        confirm yes "This will ENABLE and reset Fail2Ban using your config for context ${DOCKER_CONTEXT}"
    else
        confirm yes "This will DISABLE and reset Fail2Ban using your config for context ${DOCKER_CONTEXT}"
    fi
    install_fail2ban
    configure_fail2ban
    if d.rymcg.tech ssh "test -f ${TRAEFIK_ACCESS_LOG}"; then
        enable_or_disable_fail2ban
    else
        echo
        if confirm yes "The Traefik access log must be enabled."; then
            d.rymcg.tech make traefik reconfigure var=TRAEFIK_ACCESS_LOGS_ENABLED=true
            d.rymcg.tech make traefik reinstall
            sleep 2
            if d.rymcg.tech ssh "test -f ${TRAEFIK_ACCESS_LOG}"; then
                enable_or_disable_fail2ban
            else
                fault "Could not find traefik access log."
            fi
        fi
    fi
}

main
