#!/bin/bash
set -e

BIN=$(dirname $(realpath ${BASH_SOURCE}))
ROOT_DIR=$(dirname ${BIN})
TRAEFIK_ACCESS_LOG=/var/lib/docker/volumes/traefik_traefik/_data/access.log
source ${BIN}/funcs.sh

host_is_debian() {
    d.rymcg.tech ssh '[[ -f /etc/debian_version ]]' &> /dev/null
}

host_is_fedora() {
    d.rymcg.tech ssh 'if [[ -f /etc/redhat-release ]]; then
                  if command -v dnf &> /dev/null; then
                      :
                  elif command -v yum &> /dev/null; then
                      :
                  else
                      fault "This system is Fedora-based, but neither '\''dnf'\'' nor '\''yum'\'' is available."
                  fi
                  exit 0
              else
                  exit 1
              fi'
}

host_is_arch_linux() {
    d.rymcg.tech ssh '[[ -f /etc/arch-release ]]' &> /dev/null
}

install_fail2ban() {
    if host_is_debian; then
        echo "Installing Fail2ban on Debian-based system..."
        d.rymcg.tech ssh "sudo apt-get update && sudo apt-get install -y fail2ban"

    elif host_is_fedora; then
        echo "Installing Fail2ban on Fedora-based system..."
        d.rymcg.tech ssh "sudo dnf install -y fail2ban || sudo yum install -y fail2ban"

    elif host_is_arch_linux; then
        echo "Installing Fail2ban on Arch Linux-based system..."
        d.rymcg.tech ssh "sudo pacman -Syu --noconfirm fail2ban"

    else
        echo "Error: This system OS could not be detected. Debian, Fedora, and Arch Linux are supported. You must install the Fail2ban package yourself."
        exit 1
    fi
}

enable_fail2ban() {
    d.rymcg.tech ssh systemctl enable --now fail2ban
    d.rymcg.tech ssh systemctl restart fail2ban
    sleep 3
    d.rymcg.tech ssh systemctl status fail2ban
    d.rymcg.tech ssh fail2ban-client status
}

configure_fail2ban() {
    d.rymcg.tech ssh 'cat > /etc/fail2ban/fail2ban.local' <<EOF
[DEFAULT]
loglevel = DEBUG
bantime = 10m
findtime = 10m
maxretry = 5
allowipv6 = true
EOF

    d.rymcg.tech ssh 'cat > /etc/fail2ban/jail.d/sshd.local' <<EOF
[sshd]
enabled = true
port = ssh
filter = sshd
backend = systemd
maxretry = 2
bantime = 10m
findtime = 10m
allowipv6 = false
EOF
    
    d.rymcg.tech ssh 'cat > /etc/fail2ban/jail.d/traefik.local' <<EOF    
[traefik-access]
enabled = true
filter = traefik-access
logpath = ${TRAEFIK_ACCESS_LOG}
maxretry = 5
bantime = 2m
findtime = 10m
EOF

    d.rymcg.tech ssh 'cat > /etc/fail2ban/filter.d/traefik-access.conf' <<EOF
[Definition]
failregex = .*"ClientHost":"<HOST>".*"DownstreamStatus":(?:400|403|405|407|429|431).*$
ignoreregex =
EOF
}

main() {
    check_var ENV_FILE ROOT_ENV DOCKER_CONTEXT ROOT_DIR CONTEXT_INSTANCE
    echo
    confirm yes "This will reset and reconfigure fail2ban using the ${DOCKER_CONTEXT} context"
    install_fail2ban
    configure_fail2ban
    if d.rymcg.tech ssh "test -f ${TRAEFIK_ACCESS_LOG}"; then
        enable_fail2ban
    else
        echo
        if confirm yes "The Traefik access log must be enabled."; then
            d.rymcg.tech make traefik reconfigure var=TRAEFIK_ACCESS_LOGS_ENABLED=true
            d.rymcg.tech make traefik reinstall
            sleep 2
            if d.rymcg.tech ssh "test -f ${TRAEFIK_ACCESS_LOG}"; then
                enable_fail2ban
            else
                fault "Could not find traefik access log."
            fi
        fi
    fi
}

main
