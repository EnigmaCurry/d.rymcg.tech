## This Makefile is included by all other Makefiles to set global targets.
## This include script expects ROOT_DIR to be set in the parent.

SHELL = /bin/bash
## Prefix name for image tags:
DOCKER_ORG ?= localhost
## Tools path:
BIN = $(shell realpath ${ROOT_DIR}/_scripts)

DOCKER_CONTEXT = $$(${BIN}/docker_context)
## Root environment file (contains ROOT_DOMAIN)
ROOT_ENV = .env_$${DOCKER_CONTEXT}
## Per-project environment file name is keyed to the current docker context and the optional INSTANCE name:
instance ?= "$${INSTANCE}"
INSTANCE ?= ${instance}
CONTEXT_INSTANCE ?= $$( (set +x; [[ -n "${instance}" ]] && echo "${DOCKER_CONTEXT}_${instance}" || echo "${DOCKER_CONTEXT}") )
ENV_FILE ?= ".env_${CONTEXT_INSTANCE}"
PROJECT_NAME ?= $$( (set +x; [[ -n "${instance}" ]] && echo "$$(basename $${PWD})_${instance}" || echo "$$(basename $${PWD})") )
CWD_PROJECT_INSTANCE:=$$( (set +x; [[ -n "${instance}" ]] && echo "${PROJECT_NAME}_${instance}" || echo "${PROJECT_NAME}") )
PROJECT_INSTANCE ?= ${CWD_PROJECT_INSTANCE}
DOCKER_COMPOSE_FILE_ARGS ?= $$( (set +x; [[ -f docker-compose.override_${CONTEXT_INSTANCE}.yaml ]] && echo "-f docker-compose.yaml -f docker-compose.override_${CONTEXT_INSTANCE}.yaml" || echo "-f docker-compose.yaml") )

.PHONY: all
all: help

.PHONY: check-instance-project
check-instance-project:
ifeq ($(shell echo ${PROJECT_INSTANCE}),$(shell echo ${CWD_PROJECT_INSTANCE}))
else
	@echo -e "# This instance is locked to a different project directory: ${PROJECT_INSTANCE}\n# To work in this directory, you must unset PROJECT_INSTANCE first,\n# or use \`make switch\` in this project directory."
	@exit 1
endif

%-rule-exists:
	@$(MAKE) -n $* &> /dev/null
