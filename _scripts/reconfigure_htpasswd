#!/bin/bash

## reconfigure_htpasswd_ask VAR

BIN=$(dirname ${BASH_SOURCE})
env=${ENV_FILE:-.env}
env_dist=${ENV_DIST_FILE:-.env-dist}
fault(){ echo $1; exit 1; }

function join_by {
  local d=${1-} f=${2-}
  if shift 2; then
    printf %s "$f" "${@/#/$d}"
  fi
}

set -e

var=${1}
shift
## Make new .env if it doesn't exist:
test -f ${env} || cp ${env_dist} ${env}

cat <<EOF | docker build -t localhost/htpasswd -
FROM alpine
RUN apk add -U openssl apache2-utils python3
EOF

HASHED_PASSWORDS=()
while true; do
    read -p "Enter the username for HTTP Basic Authentication: " USERNAME
    read -p "Enter the passphrase for ${USERNAME} (leave blank to generate a random passphrase): " PLAIN_PASSWORD
    if [[ -z ${PLAIN_PASSWORD} ]]; then
        PLAIN_PASSWORD=$(docker run --rm -i localhost/htpasswd openssl rand -base64 30 | head -c 20)
        echo "Plain text password for ${USERNAME} (save this): ${PLAIN_PASSWORD}"
    fi
    HASHED_PASSWORDS+=($(docker run --rm -i localhost/htpasswd htpasswd -nb "${USERNAME}" "${PLAIN_PASSWORD}"))
    URL_ENCODED=https://"${USERNAME}":$(docker run --rm -i localhost/htpasswd python3 -c "from urllib.parse import quote; print(quote('''${PLAIN_PASSWORD=}'''))")@example.com/...
    echo "Url encoded: ${URL_ENCODED}"
    ${BIN}/confirm no "Would you like to create more usernames" "?" || break
done

HASH_PASSWORD=$(join_by , ${HASHED_PASSWORDS[@]} | sed 's/\$/\\$/g')


${BIN}/dotenv -f ${env} set ${var}="${HASH_PASSWORD}"
echo "$1 combined usernames and hashed passwords (copied to .env): ${HASH_PASSWORD}"
