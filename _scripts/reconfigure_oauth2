#!/bin/bash

## reconfigure_oauth2 VAR_PREFIX

## If no default given, unconditionally set the Oauth2 environment variable VAR via wizard.
## If the default is given, the user will be asked if they want Oauth2 or not, defaulting to the yes or no supplied.

BIN=$(dirname ${BASH_SOURCE})
source ${BIN}/funcs.sh
set -e
DOCKER_CONTEXT=$(docker context ls --format "{{.Current}} {{.Name}}" | grep -oP "^true \K.*")

if [[ ${__D_RY_CONFIG_ENTRY} != reconfigure_auth ]]; then
    echo "\`${BASH_SOURCE}\` was designed to be called from \`reconfigure_auth\`."
    echo
    exit 1
fi

ENV_FILE=${1}
shift

VAR_PREFIX=${1}
shift

enable_oauth2() {
    ${BIN}/reconfigure ${ENV_FILE} ${VAR_PREFIX}_OAUTH2=true
}

disable_oauth2() {
    ${BIN}/reconfigure ${ENV_FILE} ${VAR_PREFIX}_OAUTH2=
    exit 0
}


## Make new .env if it doesn't exist:
test -f ${ENV_FILE} || cp .env-dist ${ENV_FILE}

CONTEXT_INSTANCE=$(basename $ENV_FILE | sed 's/.env_//')

docker inspect traefik-forward-auth >/dev/null || (echo "traefik-forward-auth is not installed. Follow the directions at https://github.com/EnigmaCurry/d.rymcg.tech/tree/master/traefik-forward-auth#readme and then retry this" && exit 1)


## Update var in .env* file
enable_oauth2

echo

## header-authorization-group

## Get list of configured groups
TRAEFIK_HEADER_AUTHORIZATION_GROUPS=$(${BIN}/dotenv -f ${ROOT_DIR}/traefik/.env_${DOCKER_CONTEXT}_default get TRAEFIK_HEADER_AUTHORIZATION_GROUPS)
if [[ $TRAEFIK_HEADER_AUTHORIZATION_GROUPS == "" ]]; then
    TRAEFIK_HEADER_AUTHORIZATION_GROUPS="{}"
fi
groups=($(jq -r '. | keys[]' <<< ${TRAEFIK_HEADER_AUTHORIZATION_GROUPS}))
## Ask user which header authorization group to permit access to this app
authorized_group=$(${BIN}/dotenv -f ${ENV_FILE} get ${VAR_PREFIX}_OAUTH2_AUTHORIZED_GROUP)

${BIN}/reconfigure_choose ${ENV_FILE} ${VAR_PREFIX}_OAUTH2_AUTHORIZED_GROUP "Which authorization group do you want to permit access to this app?" ${groups[@]}
