#!/bin/bash

## reconfigure_oauth2 VAR [default=yes|no]

## If no default given, unconditionally set the Oauth2 environment variable VAR via wizard.
## If the default is given, the user will be asked if they want oaut2h2 or not, defaulting to the yes or no supplied.

BIN=$(dirname ${BASH_SOURCE})
source ${BIN}/funcs.sh
set -e

ENV_FILE=${1}
shift

VAR=${1}
shift

enable_oauth2() {
    ${BIN}/reconfigure ${ENV_FILE} ${VAR}=yes
}

disable_oauth2() {
    ${BIN}/reconfigure ${ENV_FILE} ${VAR}=no
    exit 0
}


## Make new .env if it doesn't exist:
test -f ${ENV_FILE} || cp .env-dist ${ENV_FILE}

CONTEXT_INSTANCE=$(basename $ENV_FILE | sed 's/.env_//')

if [[ ${1} =~ ^default= ]]; then
    DEFAULT_ENABLED_OAUTH2=no
    if [[ ${1} =~ ^default=yes$ ]] || [[ $(${BIN}/dotenv -f ${ENV_FILE} get ${VAR}) == "yes" ]]; then
        DEFAULT_ENABLED_OAUTH2=yes
    fi
    echo ""
    echo "Using OpenID/OAuth2 will require a login to access your app, but it will not affect what a successfully logged-in person can do in your app. If your app has built-in authentication *and* can check the user header that traefik-forward-auth sends, then your app can limit what the logged-in person can do in the app. But if your app can't check the user header, or if your app doesn't have built-in authentication at all, then any person with an account on your Gitea server can log into your app and have full access."
    #$(${BIN}/confirm $$([[ $$(${BIN}/dotenv -f ${ENV_FILE} get ${VAR}) == "true" ]] && echo "yes" || echo "no") "Do you want to enable OpenID/OAuth2" "?" && ${BIN}/reconfigure ${ENV_FILE} ${VAR}=true || ${BIN}/reconfigure ${ENV_FILE} ${VAR}=false)
    ${BIN}/confirm ${DEFAULT_ENABLED_OAUTH2} "Do you want to enable OpenID/OAuth2" "?" || disable_oauth2
fi
enable_oauth2
