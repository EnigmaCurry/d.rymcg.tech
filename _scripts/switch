#!/bin/bash

set -e
BIN=$(dirname ${BASH_SOURCE})
source ${BIN}/funcs.sh

[[ -z ${switchto_instance} ]] && instance=${INSTANCE} || instance=${switchto_instance}

valid_regex='^[a-zA-Z][a-zA-Z0-9_-]*$'
if [[ -z "${instance}" ]]; then
    EXISTING_ENVS=$(ls .env_${DOCKER_CONTEXT}_* 2>/dev/null | sed "s/.env_${DOCKER_CONTEXT}_//" || true)
    if [[ -n "$EXISTING_ENVS" ]]; then
        echo "Existing environments:"
        echo "${EXISTING_ENVS}"
        echo ""
    fi
    while [[ -z "${instance}" ]]; do
        read -p "Enter an instance name to switch to"$'\x0a: ' instance
        if ! [[ "${instance}" =~ $valid_regex ]]; then
            error "Invalid instance name. Try again."
            unset instance
        fi
    done
fi

test -z "$instance" && echo "Missing required instance name." && exit 1

ROOT_DIR=..
ENV_FILE=$(echo "${ENV_FILE}" | sed 's/_[^_]*$//')
NEW_ENV_FILE="${ENV_FILE}_${instance}"
ROOT_ENV_FILE=".env_${DOCKER_CONTEXT}"
source "${ROOT_DIR}/${ROOT_ENV_FILE}"

if [[ ! -f "${NEW_ENV_FILE}" ]]; then
    read -p "Instance ${instance} doesn't exist, do you want to create a new instance? (y/N) "$'\x0a: ' makenew
    makenew=${makenew:-n}
    if [[ $makenew == [yY] ]]; then
        echo "making new instance..."
        echo ""
        #sleep 1
        make --no-print-directory instance newinstance=${instance}
        exit 0
    else
        echo "No instance created or switched to."
        exit 0
    fi
fi

echo "## Entering sub-shell for instance ${instance}".
echo "## Press Ctrl-D to exit or type \`exit\`."
INSTANCE="${instance}"
export instance="${instance}"
#test ! -z "${instance}" && read -p "Enter the temporary default instance name:"$'\x0a: ' instance
bash --rcfile <(echo "test -f \"${MAKE_INSTANCE_SOURCE_RCFILE}\" && source \"${MAKE_INSTANCE_SOURCE_RCFILE}\"; export TERM=$TERM; PATH=$PATH; export INSTANCE=${instance}; export PROJECT_INSTANCE=$(basename ${PWD})_${instance}; export PROJECT=$(basename $PWD); export INSTANCE_SUBSHELL=true; unset ENV_FILE; unset MAKELEVEL; PS1='\n(context=$(${BIN}/docker_context) project=$(basename $PWD) instance=${instance})\n\W $ '") -i
