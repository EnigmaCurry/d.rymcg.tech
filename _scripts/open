#!/bin/bash

# Find project URL
# Find saved username/password
# Open URL in browser
## Optional arguments override URL parts:
## $1 path
## $2 host
## $3 protocol (https)

BIN=$(dirname ${BASH_SOURCE})
DOCKER_CONTEXT=$(${BIN}/docker_context)
instance=${instance:-${INSTANCE:-default}}
CONTEXT_INSTANCE="${DOCKER_CONTEXT}_${instance}"

ENV_FILE=".env_${CONTEXT_INSTANCE}"

if [[ ! -f ${ENV_FILE} ]]; then
    echo "No ${ENV_FILE} file found"
    exit 1
fi

URL_PATH=${1:-"/"}
HOST=${2:-$(grep -m 1 -oP "TRAEFIK_HOST=\K.*" ${ENV_FILE})}
PROTOCOL=${3:-"https"}

if [[ ${URL_PATH} != /* ]]; then
    echo "URL must start with /"
    exit 1
fi
if [[ -z ${HOST} ]]; then
    echo "Hostname must not be blank"
    exit 1
fi

## Use 'jq' if installed, otherwise use the docker (Alpine) version:
source $(dirname ${BASH_SOURCE})/wrapper.sh
jq() {
    wrapper_build jq <<EOF
FROM alpine
RUN apk add -U jq
EOF
    wrapper jq "${@}" </dev/stdin
}
if [[ -f passwords.json ]]; then
    URL_PASSWORD=$(jq -r '(.["'${CONTEXT_INSTANCE}'"][0].username) + ":" + (.["'${CONTEXT_INSTANCE}'"][0].url_encoded)' <passwords.json)"@"
else
    URL_PASSWORD=""
fi

URL="${PROTOCOL}://${URL_PASSWORD}${HOST}${URL_PATH}"

if which xdg-open >/dev/null 2>&1; then
    (set -x; xdg-open "${URL}")
else
    echo "xdg-open not found"
    echo "URL: ${URL}"
fi
