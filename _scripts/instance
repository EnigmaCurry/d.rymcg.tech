#!/bin/bash

set -e
BIN=$(dirname ${BASH_SOURCE})
source ${BIN}/funcs.sh
ROOT_DIR=${ROOT_DIR:..}
ROOT_ENV_FILE=".env_${DOCKER_CONTEXT}"

valid_regex='^[a-zA-Z][a-zA-Z0-9_-]*$'
if [[ "${showmenu}" == "true" ]]; then
    readarray -t EXISTING_ENVS < <(ls .env_${DOCKER_CONTEXT}_* 2>/dev/null | sed "s/.env_${DOCKER_CONTEXT}_//" || true)
    if [[ -z "$EXISTING_ENVS" ]]; then
        echo 
        echo "There are no existing instances in the current Docker context (${DOCKER_CONTEXT}) to switch to."
        ${BIN}/confirm "yes" "Do you want to create a new instance" "?" && call="instance" || exit 0
        echo 
    fi
    while [[ -z "${newinstance}" ]]; do
        if [[ "${call}" == "switch" ]]; then
            newinstance=$(eval wizard choose "'Enter an instance to switch to'" ${EXISTING_ENVS[@]@Q})
        else
            suggestions=$(jq -c -n '$ARGS.positional | unique' --args -- ${EXISTING_ENVS[@]})
            newinstance=$(wizard ask "Enter an instance name to create/edit:" --suggestions "${suggestions}")
        fi
        if ! [[ "${newinstance}" =~ $valid_regex ]]; then
            error "Invalid instance name. Try again."
            unset newinstance
        fi
    done
fi

test -z "$newinstance" && echo "Missing required instance name." && exit 1

ENV_FILE=$(echo "${ENV_FILE}" | sed "s/_default//; s/_${newinstance}//")
NEW_ENV_FILE="${ENV_FILE}_${newinstance}"
if [[ "${call}" == "instance" ]]; then
    #test ! -f "${NEW_ENV_FILE}" &&
    make --no-print-directory config INSTANCE="${newinstance}" ENV_FILE="${NEW_ENV_FILE}" DOCKER_CONTEXT=${DOCKER_CONTEXT}
fi

source "${ROOT_DIR}/${ROOT_ENV_FILE}"

echo "## Entering sub-shell for instance ${newinstance}".
echo "## Press Ctrl-D to exit or type \`exit\`."
INSTANCE="${newinstance}"
export instance="${newinstance}"
#test ! -z "${newinstance}" && read -p "Enter the temporary default instance name:"$'\x0a: ' newinstance
bash --rcfile <(echo "test -f \"${MAKE_INSTANCE_SOURCE_RCFILE}\" && source \"${MAKE_INSTANCE_SOURCE_RCFILE}\"; export TERM=$TERM; PATH=$PATH; export INSTANCE=${instance}; export PROJECT_INSTANCE=$(basename ${PWD})_${instance}; export PROJECT=$(basename $PWD); export INSTANCE_SUBSHELL=true; unset ENV_FILE; unset MAKELEVEL; PS1='\n(context=$(${BIN}/docker_context) project=$(basename $PWD) instance=${instance})\n\W $ '") -i
