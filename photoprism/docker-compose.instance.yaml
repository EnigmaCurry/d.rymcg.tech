#! This is a ytt template file for docker-compose.override.yaml
#! References:
#!   https://carvel.dev/ytt
#!   https://docs.docker.com/compose/extends/#adding-and-overriding-configuration
#!   https://github.com/enigmacurry/d.rymcg.tech#overriding-docker-composeyaml-per-instance

#! ### Standard project vars:
#@ load("@ytt:data", "data")
#@ project = data.values.project
#@ instance = data.values.instance
#@ context = data.values.context
#@ traefik_host = data.values.traefik_host
#@ ip_sourcerange = data.values.ip_sourcerange
#@ enable_http_auth = len(data.values.http_auth.strip()) > 0
#@ http_auth = data.values.http_auth_var
#@ enabled_middlewares = []

#! ### Custom project vars:
#@ photoprism_admin_user = data.values.PHOTOPRISM_ADMIN_USER
#@ photoprism_homepage_admin_password = data.values.PHOTOPRISM_HOMEPAGE_ADMIN_PASSWORD

#@yaml/text-templated-strings
services:
  photoprism:
    #@ service = "photoprism"
    labels:
      #! Services must opt-in to be proxied by Traefik:
      - "traefik.enable=true"

      #! 'router' is the fully qualified key in traefik for this router/service: project + instance + service
      #@ router = "{}-{}-{}".format(project,instance,service)

      #! The host matching router rule:
      - "traefik.http.routers.(@= router @).rule=Host(`(@= traefik_host @)`)"
      - "traefik.http.routers.(@= router @).entrypoints=websecure"
      #@ enabled_middlewares.append("{}-ipwhitelist".format(router))
      - "traefik.http.middlewares.(@= router @)-ipwhitelist.ipwhitelist.sourcerange=(@= ip_sourcerange @)"

      #@ if enable_http_auth:
      #@ enabled_middlewares.append("{}-basicauth".format(router))
      - "traefik.http.middlewares.(@= router @)-basicauth.basicauth.users=(@= http_auth @)"
      #@ end

      #! Override the default port that photoprism binds to, so that it lives in userspace >1024:
      #! You don't normally need to do this, as long as your image has
      #! an EXPOSE directive in it, Traefik will autodetect it, but this is how you can override it:
      #! - "traefik.http.services.(@= router @).loadbalancer.server.port=8000"

      #! Apply all middlewares (do this at the end!)
      - "traefik.http.routers.(@= router @).middlewares=(@= ','.join(enabled_middlewares) @)"

      #! Homepage labels for auto-discovery and config:
      - "homepage.group=Group A"
      - "homepage.name=PhotoPrism"
      - "homepage.icon=photoprism.png"
      - "homepage.href=http://(@= traefik_host @)"
      - "homepage.description=AI-Powered Photos App for the Decentralized Web"
      - "homepage.widget.type=photoprism"
      - "homepage.widget.url=http://(@= traefik_host @)"
      - "homepage.widget.username=(@= photoprism_admin_user @)"
      - "homepage.widget.password=(@= photoprism_homepage_admin_password @)"
      - "homepage.widget.fields=[\"albums\", \"photos\", \"videos\", "people\"]"
