PHOTOPRISM_TRAEFIK_HOST=photoprism.example.com
PHOTOPRISM_VERSION=230719
PHOTOPRISM_INSTANCE=
TIMEZONE=Etc/UTC

## The following can be named docker volumes OR host mounted absolute paths.
## Make sure to create these directories before install.
##
## Where to store your original media files:
PHOTOPRISM_ORIGINALS_VOLUME=/tmp/images
##
## Optionally, you can add additional media volumes, but be sure to also add
## them to the `photoprism` service in `docker-compose.yaml` as well.
## Example:
# PHOTOPRISM_HOST_MEDIA_VOLUME_2=/tmp/more-images
# PHOTOPRISM_CONTAINER_MEDIA_DIR_2=more-images
##
## Optionally, you can add a base folder from which files can be imported
## to originals, but be sure to uncomment the corresponding line in the 
## `photoprism` service in `docker-compose.yaml` as well.
# PHOTOPRISM_HOST_IMPORT_VOLUME=/tmp/import

## Traefik htpasswd encoded authentication
## (automatically set via `make config`):
PHOTOPRISM_HTTP_AUTH=

# OAUTH2
# Set to `yes` to use OpenID/OAuth2 authentication via the
# traefik-forward-auth service in d.rymcg.tech.
# Using OpenID/OAuth2 will require login to access your app,
# but it will not affect what a successfully logged-in person can do in your
# app. If your app has built-in authentication and can check the user
# header that traefik-forward-auth sends, then your app can limit what the
# logged-in person can do in the app. But if your app can't check the user
# header, or if your app doesn't have built-in authentication at all, then
# any person with an account on your Gitea server can log into your app and
# have full access.
PHOTOPRISM_OAUTH2=
# In addition to Oauth2 authentication, you can configure basic authorization
# by entering which authorization group can log into your app. You create
# groups of email addresses in the `traefik` folder by running `make groups`. 
PHOTOPRISM_OAUTH2_AUTHORIZED_GROUP=

# Mutual TLS (mTLS):
# Set true or false. If true, all clients must present a certificate signed by Step-CA:
PHOTOPRISM_MTLS_AUTH=false
# Enter a comma separated list of client domains allowed to connect via mTLS.
# Wildcards are allowed and encouraged on a per-app basis:
PHOTOPRISM_MTLS_AUTHORIZED_CERTS=*.clients.photoprism.example.com

## Traefik IP whitelist filter to block access to the client interface:
## (does not affect peer connections)
PHOTOPRISM_IP_SOURCERANGE=0.0.0.0/0


PHOTOPRISM_ADMIN_USER=admin
PHOTOPRISM_DATABASE_PASSWORD=
PHOTOPRISM_SITE_CAPTION=AI-Powered Photos App
PHOTOPRISM_SITE_DESCRIPTION=
PHOTOPRISM_SITE_AUTHOR=
## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
# PHOTOPRISM_INIT=https gpu tensorflow
## Hardware Video Transcoding:
# FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
# PHOTOPRISM_FFMPEG_ENCODER=software
# FFmpeg encoding bitrate limit in Mbit/s (default: 50)
# PHOTOPRISM_FFMPEG_BITRATE=32
# FFmpeg encoding resolution limit in pixel height (default: 4096)
# PHOTOPRISM_FFMPEG_RESOLUTION=1920
## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
PHOTOPRISM_UID=1000
PHOTOPRISM_GID=1000
PHOTOPRISM_UMASK=0000

## There's probably very little reason to change any values below here.

# authentication mode (public, password)
PHOTOPRISM_AUTH_MODE=password
# file size limit for originals in MB (increase for high-res video)
PHOTOPRISM_ORIGINALS_LIMIT=5000
# improves transfer speed and bandwidth utilization (none or gzip)
PHOTOPRISM_HTTP_COMPRESSION=gzip
# log level: trace, debug, info, warning, error, fatal, or panic
PHOTOPRISM_LOG_LEVEL=info
# do not modify originals directory (reduced functionality)
PHOTOPRISM_READONLY=false
# enables experimental features
PHOTOPRISM_EXPERIMENTAL=false
# disables updating storage permissions via chmod and chown on startup
PHOTOPRISM_DISABLE_CHOWN=false
# disables built-in WebDAV server
PHOTOPRISM_DISABLE_WEBDAV=false
# disables settings UI and API
PHOTOPRISM_DISABLE_SETTINGS=false
# disables all features depending on TensorFlow
PHOTOPRISM_DISABLE_TENSORFLOW=false
# disables face detection and recognition (requires TensorFlow)
PHOTOPRISM_DISABLE_FACES=false
# disables image classification (requires TensorFlow)
PHOTOPRISM_DISABLE_CLASSIFICATION=false
# disables vector graphics support
PHOTOPRISM_DISABLE_VECTORS=false
# disables indexing and conversion of RAW images
PHOTOPRISM_DISABLE_RAW=false
# enables applying user presets when converting RAW images (reduces performance)
PHOTOPRISM_RAW_PRESETS=false
# a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
PHOTOPRISM_JPEG_QUALITY=85
# automatically flags photos as private that MAY be offensive (requires TensorFlow)
PHOTOPRISM_DETECT_NSFW=false
# allows uploads that MAY be offensive (no effect without TensorFlow)
PHOTOPRISM_UPLOAD_NSFW=true


# META:
# PREFIX=PHOTOPRISM
