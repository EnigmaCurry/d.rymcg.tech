#! This is a ytt template file for docker-compose.override.yaml
#! References:
#!   https://carvel.dev/ytt
#!   https://docs.docker.com/compose/extends/#adding-and-overriding-configuration
#!   https://github.com/enigmacurry/d.rymcg.tech#overriding-docker-composeyaml-per-instance

#! ### Standard project vars:
#@ load("@ytt:data", "data")
#@ project = data.values.project
#@ instance = data.values.instance
#@ context = data.values.context
#@ traefik_host = data.values.traefik_host
#@ ip_sourcerange = data.values.ip_sourcerange
#@ enable_http_auth = len(data.values.http_auth.strip()) > 0
#@ http_auth = data.values.http_auth_var
#@ enable_oauth2 = data.values.oauth2 == "true"
#@ authorized_group = data.values.authorized_group
#@ enable_mtls_auth = data.values.enable_mtls_auth == "true"
#@ mtls_authorized_certs = data.values.mtls_authorized_certs
#@ enabled_middlewares = []

#! ### Project-specific vars:
#@ compose_profile = data.values.compose_profile
#@ models_host_path = data.values.models_host_path
#@ output_host_path = data.values.output_host_path

#@ def comfyui_service(profile):
#@   service = "comfyui-" + profile
#@   router = "{}-{}-{}".format(project, instance, service)
#@   labels = []
#@   middlewares = []
#@   labels.append("traefik.enable=true")
#@   labels.append("traefik.http.routers.{}.rule=Host(`{}`)".format(router, traefik_host))
#@   labels.append("traefik.http.routers.{}.entrypoints=websecure".format(router))
#@   middlewares.append("{}-ipallowlist".format(router))
#@   labels.append("traefik.http.middlewares.{}-ipallowlist.ipallowlist.sourcerange={}".format(router, ip_sourcerange))
#@   if enable_http_auth:
#@   enabled_middlewares.append("{}-basicauth".format(router))
#@   labels.append("traefik.http.middlewares.{}-basicauth.basicauth.users={}".format(router, http_auth))
#@   labels.append("traefik.http.middlewares.{}-basicauth.basicauth.headerField=X-Forwarded-User".format(router))
#@   end
#@   if enable_oauth2:
#@   enabled_middlewares.append("traefik-forward-auth@docker")
#@   enabled_middlewares.append("header-authorization-group-{}@file".format(authorized_group))
#@   end
#@   if enable_mtls_auth:
#@   labels.append("traefik.http.routers.{}.tls.options=step_ca_mTLS@file".format(router))
#@   if len(mtls_authorized_certs):
#@   labels.append("traefik.http.middlewares.mtlsauth-{}.plugin.certauthz.domains={}".format(router, mtls_authorized_certs))
#@   enabled_middlewares.append("mtlsauth-{}".format(router))
#@   end
#@   enabled_middlewares.append("mtls-header@file")
#@   end
#@   labels.append("traefik.http.routers.{}.middlewares={}".format(router, ",".join(middlewares)))
#@   labels.append("traefik.http.services.{}.loadbalancer.server.port=8188".format(router)) 
#@   volumes = []
#@   if models_host_path != "":
#@   volumes = volumes + ["{}:/ComfyUI/models".format(models_host_path)]
#@   end
#@   if output_host_path != "":
#@   volumes = volumes + ["{}:/ComfyUI/output".format(output_host_path)]
#@   end
#@   return {
#@     service: {
#@       "volumes": volumes,
#@       "labels": labels
#@     }
#@   }
#@ end

#@yaml/text-templated-strings
services:
  #@ if compose_profile in ["rocm", "cuda", "intel"]:
  #@ service_def = comfyui_service(compose_profile)
  #@ for name, config in service_def.items():
  (@= name @):
    #@ for key, val in config.items():
    #@ if val != []:
    (@= key @):
      #@ for item in val:
      - (@= item @)
      #@ end
    #@ end
    #@ end
  #@ end
  #@ end
