# The version of ComfyUI to install
# (https://github.com/comfyanonymous/ComfyUI/releases):
COMFYUI_VERSION=v0.3.62

# For ROCm environments (AMD GPU):
# Enter the version of ROCm to install. The format can be X.X or X.X.X
# (e.g., 6.4 or 6.4.3). You can find existing versions here:
# https://repo.radeon.com/amdgpu-install/
COMFYUI_ROCM_VERSION=6.4.3

# For CUDA environments (Nvidia GPU):
# Enter the CUDA wheel version matching your host's GPU compute
# capability and CUDA driver version (for example: cu129 for CUDA
# 12.9). To determine your host's CUDA version, run `nvidia-smi`.
COMFYUI_CUDA_WHEEL_VERSION=cu129

# The domain name for the comfyui service:
COMFYUI_TRAEFIK_HOST=comfyui.example.com

# The name of this instance. If there is only one instance, use 'default'.
COMFYUI_INSTANCE=

# Enter the profile for the processing engine: cuda (for nvidia
# GPUs), rocm (for AMD GPUs), intel (for Intel GPUs), or cpu (for CPU
# only). You should only define one value here.
DOCKER_COMPOSE_PROFILES=cuda

# Filter access by IP address source range (CIDR):
##Disallow all access: 0.0.0.0/32
##Allow all access: 0.0.0.0/0
COMFYUI_IP_SOURCERANGE=0.0.0.0/0

# HTTP Basic Authentication:
# Use `make config` to fill this in properly, or set this to blank to disable.
COMFYUI_HTTP_AUTH=

# OAUTH2
# Set to `true` to use OpenID/OAuth2 authentication via the
# traefik-forward-auth service in d.rymcg.tech.
# Using OpenID/OAuth2 will require login to access your app,
# but it will not affect what a successfully logged-in person can do in your
# app. If your app has built-in authentication and can check the user
# header that traefik-forward-auth sends, then your app can limit what the
# logged-in person can do in the app. But if your app can't check the user
# header, or if your app doesn't have built-in authentication at all, then
# any person with an account on your Forgejo server can log into your app and
# have full access.
COMFYUI_OAUTH2=false
# In addition to Oauth2 authentication, you can configure basic authorization
# by entering which authorization group can log into your app. You create
# groups of email addresses in the `traefik` folder by running `make groups`.
COMFYUI_OAUTH2_AUTHORIZED_GROUP=

# Mutual TLS (mTLS):
# Set true or false. If true, all clients must present a certificate signed by Step-CA:
COMFYUI_MTLS_AUTH=false
# Enter a comma separated list of client domains allowed to connect via mTLS.
# Wildcards are allowed and encouraged on a per-app basis:
COMFYUI_MTLS_AUTHORIZED_CERTS=*.clients.comfyui.example.com

# For AMD GPUs that ROCm doesn’t officially support, you can try
# setting COMFYUI_HSA_OVERRIDE_GFX_VERSION to a value that matches
# your GPU’s architecture (e.g., if you run `rocminfo` on the host
# with the AMD GPU and the "Name" of your GPU is
# "amdgcn-amd-amdhsa--gfx1030", you'd enter the value `10.3.0`). If
# your GPU is supported by ROCm or if you're using a non-AMD GPU,
# leave COMFYUI_HSA_OVERRIDE_GFX_VERSION unset.
COMFYUI_HSA_OVERRIDE_GFX_VERSION=

# Leave COMFYUI_MODELS_HOST_PATH blank to save models in the named
# Docker volume for the ComfyUI container, or enter an absolute path
# on the host to save them there.
COMFYUI_MODELS_HOST_PATH=

# Leave COMFYUI_OUTPUT_HOST_PATH blank to save putput files (e.g.,
# images, video, audio) in the named Docker volume for the ComfyUI
# container, or enter an absolute path on the host to save them
# there.
COMFYUI_OUTPUT_HOST_PATH=

# Valid values are: DEBUG, INFO, WARNING, ERROR, or CRITICAL
COMFYUI_LOG_LEVEL=WARNING

# If you enter your token in the COMFYUI_HUGGING_FACE_TOKEN or
# COMFYUI_CIVITAI_TOKEN variables, it will automatically be entered
# for you when you download models from those sources. Each time you
# download a model, you will have the opportunity to enter a different
# token if you want.
COMFYUI_HUGGING_FACE_TOKEN=
COMFYUI_CIVITAI_TOKEN=

# META:
# PREFIX=COMFYUI
