# The version of ComfyUI to install
# (https://github.com/comfyanonymous/ComfyUI/releases):
COMFYUI_VERSION=v0.3.56

# The domain name for the comfyui service:
COMFYUI_TRAEFIK_HOST=comfyui.example.com

# The name of this instance. If there is only one instance, use 'default'.
COMFYUI_INSTANCE=

## Enter the profile for the processing engine: cuda (for nvidia
## GPUs), rocm (for AMD GPUs), or intel (for Intel GPUs). You should
## only define one value here.
DOCKER_COMPOSE_PROFILES=cuda

# Filter access by IP address source range (CIDR):
##Disallow all access: 0.0.0.0/32
##Allow all access: 0.0.0.0/0
COMFYUI_IP_SOURCERANGE=0.0.0.0/0

# HTTP Basic Authentication:
# Use `make config` to fill this in properly, or set this to blank to disable.
COMFYUI_HTTP_AUTH=

# OAUTH2
# Set to `true` to use OpenID/OAuth2 authentication via the
# traefik-forward-auth service in d.rymcg.tech.
# Using OpenID/OAuth2 will require login to access your app,
# but it will not affect what a successfully logged-in person can do in your
# app. If your app has built-in authentication and can check the user
# header that traefik-forward-auth sends, then your app can limit what the
# logged-in person can do in the app. But if your app can't check the user
# header, or if your app doesn't have built-in authentication at all, then
# any person with an account on your Forgejo server can log into your app and
# have full access.
COMFYUI_OAUTH2=false
# In addition to Oauth2 authentication, you can configure basic authorization
# by entering which authorization group can log into your app. You create
# groups of email addresses in the `traefik` folder by running `make groups`.
COMFYUI_OAUTH2_AUTHORIZED_GROUP=

# Mutual TLS (mTLS):
# Set true or false. If true, all clients must present a certificate signed by Step-CA:
COMFYUI_MTLS_AUTH=false
# Enter a comma separated list of client domains allowed to connect via mTLS.
# Wildcards are allowed and encouraged on a per-app basis:
COMFYUI_MTLS_AUTHORIZED_CERTS=*.clients.comfyui.example.com

# For AMD GPUs that ROCm doesn’t officially support, you can try
# setting COMFYUI_HSA_OVERRIDE_GFX_VERSION to a value that matches
# your GPU’s architecture (e.g., `10.3.0`). If your GPU is supported
# or if you're using a non-AMD GPU, leave
# COMFYUI_HSA_OVERRIDE_GFX_VERSION unset.
COMFYUI_HSA_OVERRIDE_GFX_VERSION=

## Leave COMFYUI_MODELS_HOST_PATH blank to save models in the named
## Docker volume for the ComfyUI container, or enter an absolute path
## on the host to save them there.
COMFYUI_MODELS_HOST_PATH=

## Valid values are: DEBUG, INFO, WARNING, ERROR, or CRITICAL
COMFYUI_LOG_LEVEL=WARN

# META:
# PREFIX=COMFYUI
