version: '3'

networks:
  traefik-proxy:
    name: traefik-proxy

volumes:
  config:

services:
  config:
    build:
      context: config
    security_opt:
      - no-new-privileges:true
    environment:
      - S3_ENDPOINT
      - S3_BUCKET
      - S3_ACCESS_KEY_ID
      - S3_SECRET_ACCESS_KEY
      - PRINT_CONFIG
    volumes:
      - config:/proxy/conf

  s3-proxy:
    depends_on: ['config']
    build:
      context: https://github.com/EnigmaCurry/s3-proxy.git
    restart: unless-stopped
    networks:
      - traefik-proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - config:/proxy/conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.s3proxy.rule=Host(`${S3PROXY_TRAEFIK_HOST}`)"
      - "traefik.http.routers.s3proxy.entrypoints=websecure"
      - "traefik.http.routers.s3proxy.tls.certresolver=${ACME_CERT_RESOLVER}"
      ## IP sourcerange filter:
      - "traefik.http.middlewares.s3proxy-ipwhitelist.ipwhitelist.sourcerange=${SOURCERANGE}"
      - "traefik.http.routers.s3proxy.middlewares=s3proxy-ipwhitelist@docker"
      ## Authentication:
      - "traefik.http.middlewares.s3proxy-auth.basicauth.users=${S3PROXY_HTTP_AUTH}"
      - "traefik.http.routers.s3proxy.middlewares=s3proxy-auth@docker"
      - "traefik.http.middlewares.s3proxy-auth.basicauth.realm=${S3PROXY_REALM}"
