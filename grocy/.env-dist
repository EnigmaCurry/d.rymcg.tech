# The domain name for this instance of GROCY:
GROCY_TRAEFIK_HOST=grocy.example.com

## Create a unique name for this instance of GROCY:
## `make config` will set this to `default` if you do not specify it.
GROCY_INSTANCE=

# The version of grocy to install:
# https://hub.docker.com/r/linuxserver/grocy/tags
GROCY_VERSION=3.3.2

# Filter access by IP address source range (CIDR):
# See: https://doc.traefik.io/traefik/middlewares/http/ipwhitelist/
## Disallow all access:
#GROCY_IP_SOURCERANGE="0.0.0.0/32"
## Allow all access:
#GROCY_IP_SOURCERANGE="0.0.0.0/0"
GROCY_IP_SOURCERANGE="0.0.0.0/0"

# HTTP Basic Authentication
# Use `make config` to generate and configure this setting interactively.
# Set multiple htpasswd encoded username/passwords comma separated; blank to disable
# See: https://doc.traefik.io/traefik/middlewares/http/basicauth/
GROCY_HTTP_AUTH=

# OAUTH2
# Set to `true` to use OpenID/OAuth2 authentication via the
# traefik-forward-auth service in d.rymcg.tech.
# Using OpenID/OAuth2 will require login to access your app,
# but it will not affect what a successfully logged-in person can do in your
# app. If your app has built-in authentication and can check the user
# header that traefik-forward-auth sends, then your app can limit what the
# logged-in person can do in the app. But if your app can't check the user
# header, or if your app doesn't have built-in authentication at all, then
# any person with an account on your Gitea server can log into your app and
# have full access.
GROCY_OAUTH2=
# In addition to Oauth2 authentication, you can configure basic authorization
# by entering which authorization group can log into your app. You create
# groups of email addresses in the `traefik` folder by running `make groups`. 
GROCY_OAUTH2_AUTHORIZED_GROUP=

## You may customize the UID and GID that the container runs as, this
## is passed into the Dockerfile as a build ARG.
GROCY_UID=54321
GROCY_GID=54321

# Timezone
GROCY_TZ=US/Eastern

GROCY_CURRENCY=USD
GROCY_CULTURE=en
